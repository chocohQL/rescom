server:
  port: 8080

spring:
  servlet:
    multipart:
      max-file-size: 512MB
      max-request-size: 1024MB
  datasource:
    url: jdbc:mysql://localhost:3306/rescom?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: yourUsername
    password: yourPassword
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver

  redis:
    host: localhost
    port: 6379
    password: yourPassword

  rabbitmq:
    host: host
    port: 5672
    virtual-host: /
    username: username
    password: password
    connection-timeout: 1s # 置MQ的连接超时时间
    listener:
      simple:
        prefetch: 1 # 每次只能获取一条消息，处理完成才能获取下一个消息
        acknowledge-mode: auto # 消费者消息确认
        retry:
          enabled: true # 消费者失败重试
          initial-interval: 1000ms # 初始的失败等待时长为1秒
          multiplier: 1 # 下一次失败的等待时长倍数，下次等待时长=multiplierlast-interval
          max-attempts: 3 # 大重试次数
          stateless: true # 无状态；false有状态。如果业务中包含事务，这里改为false
    template:
      retry:
        enabled: true # 开启超时重试机制
        initial-interval: 1000s # 败后的初始等待时间
        multiplier: 1 # 后下次的等待时长倍数，下次等待时长=initial-intervalmultiplier
        max-attempts: 3 # 大重试次数
    publisher-confirm-type: correlated # 启publisher confirm机制，并设置confirm类型

  profiles:
    active: dev

mybatis-plus:
  global-config:
    db-config:
      id-type: auto

sa-token:
#  token-name: Authorization
#  token-style: random-128
#  token-prefix: Bearer
#  is-read-cookie: false
#  is-read-header: true

  is-read-cookie: true
  is-read-header: false
  is-read-body: false

  token-style: random-128
  is-concurrent: true
  is-share: true
  is-log: true
  timeout: 2592000
  active-timeout: -1
  token-name: rescom-token